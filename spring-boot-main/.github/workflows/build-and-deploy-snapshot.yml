name: Build and deploy snapshot
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build-and-deploy-snapshot:
    if: ${{ github.repository == 'spring-projects/spring-boot' }}
    name: Build and deploy snapshot
    runs-on: ubuntu22-8-32
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: 17
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5
        with:
          cache-read-only: false
      - name: Configure Gradle properties
        shell: bash
        run: |
          mkdir -p $HOME/.gradle
          echo 'systemProp.user.name=spring-builds+github' >> $HOME/.gradle/gradle.properties
          echo 'systemProp.org.gradle.internal.launcher.welcomeMessageEnabled=false' >> $HOME/.gradle/gradle.properties
          echo 'org.gradle.daemon=false' >> $HOME/.gradle/gradle.properties
      - name: Build and publish
        id: build
        env:
          CI: 'true'
          GRADLE_ENTERPRISE_URL: 'https://ge.spring.io'
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY }}
          GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER }}
          GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
        run: ./gradlew -PdeploymentRepository=$(pwd)/deployment-repository build publishAllPublicationsToDeploymentRepository
      - name: Deploy
        uses: spring-io/artifactory-deploy-action@8f794d7e1c1e99a4f6afa3b87a9d1410853c1709
        with:
          uri: 'https://repo.spring.io'
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          build-name: 'spring-boot-3.3.x'
          repository: 'libs-snapshot-local'
          folder: 'deployment-repository'
          signing-key: ${{ secrets.GPG_PRIVATE_KEY }}
          signing-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          artifact-properties: |
            /**/spring-boot-docs-*.zip::zip.type=docs,zip.deployed=false
      - name: Send notification
        uses: ./.github/actions/send-notification
        if: always()
        with:
          webhook-url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          status: ${{ job.status }}
          build-scan-url: ${{ steps.build.outputs.build-scan-url }}
          run-name: ${{ format('{0} | Linux | Java 17', github.ref_name) }}
